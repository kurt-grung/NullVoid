name: NullVoid Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run security scan daily at 2 AM UTC
    - cron: '0 2 * * *'

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build NullVoid
      run: npm run build
      
    - name: Run NullVoid security scan
      run: node ts/dist/bin/nullvoid.js . --format json --output security-report.json
      
    - name: Upload security report
      uses: actions/upload-artifact@v4
      with:
        name: security-report
        path: security-report.json
        
    - name: Comment PR with security results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          let report;
          try {
            const content = fs.readFileSync('security-report.json', 'utf8');
            report = JSON.parse(content);
          } catch (error) {
            console.log('Error parsing security report:', error.message);
            console.log('File content:', fs.readFileSync('security-report.json', 'utf8'));
            // Create a fallback report
            report = {
              threats: [],
              packagesScanned: 0,
              duration: 0,
              timestamp: new Date().toISOString()
            };
          }
          
          let comment = '## üîç NullVoid Security Scan Results\n\n';
          
          if (report.threats.length === 0) {
            comment += '‚úÖ **No security threats detected!**\n\n';
          } else {
            comment += `‚ö†Ô∏è **${report.threats.length} threat(s) detected:**\n\n`;
            
            report.threats.forEach((threat, index) => {
              const severity = threat.severity === 'CRITICAL' ? 'üö®' :
                              threat.severity === 'HIGH' ? 'üî¥' : 
                              threat.severity === 'MEDIUM' ? 'üü°' : 'üü¢';
              comment += `${index + 1}. ${severity} **${threat.type}**: ${threat.message}\n`;
              if (threat.package) {
                comment += `   - Package: \`${threat.package}\`\n`;
              }
              if (threat.details) {
                comment += `   - Details: ${threat.details}\n`;
              }
              comment += '\n';
            });
          }
          
          comment += `üìä **Scan Summary:**\n`;
          comment += `- Packages scanned: ${report.packagesScanned || report.summary?.totalPackages || 0}\n`;
          comment += `- Files scanned: ${report.filesScanned || report.summary?.totalFiles || 0}\n`;
          comment += `- Scan duration: ${report.performance?.duration || report.metrics?.duration || 0}ms\n`;
          comment += `- Scan timestamp: ${new Date(report.metadata?.scanTime || new Date()).toLocaleString()}\n\n`;
          comment += '---\n';
          comment += '*This scan was performed by [NullVoid](https://github.com/kurt-grung/NullVoid) - a tool to detect malicious npm packages.*';
          
          github.rest.pulls.createReview({
            pull_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment,
            event: 'COMMENT'
          });
          
    - name: Fail on critical and high severity threats
      if: github.event_name == 'pull_request'
      run: |
        if [ -f security-report.json ]; then
          CRITICAL_THREATS=$(jq '[.threats[] | select(.severity == "CRITICAL")] | length' security-report.json)
          HIGH_THREATS=$(jq '[.threats[] | select(.severity == "HIGH")] | length' security-report.json)
          if [ "$CRITICAL_THREATS" -gt 0 ]; then
            echo "üö® CRITICAL threats detected! Immediate action required."
            exit 1
          elif [ "$HIGH_THREATS" -gt 0 ]; then
            echo "‚ùå High severity threats detected! Please review and fix before merging."
            exit 1
          fi
        fi

  dependency-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run npm audit
      run: npm audit --audit-level=moderate
      
    - name: Build NullVoid
      run: npm run build
      
    - name: Run NullVoid on dependencies
      run: |
        echo "Scanning project dependencies..."
        node ts/dist/bin/nullvoid.js . --format json --output dependency-scan.json
        
    - name: Upload dependency scan results
      uses: actions/upload-artifact@v4
      with:
        name: dependency-scan-results
        path: dependency-scan.json
